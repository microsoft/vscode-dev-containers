{
	"name": "HashiStack",
	"dockerFile": "Dockerfile",

	// Use 'settings' to set *default* container specific settings.json values on container create. 
	// You can edit these settings after create using File > Preferences > Settings > Remote.
	"settings": { 
		"terminal.integrated.shell.linux": "/bin/zsh"
	},

	// Use 'appPort' to create a container with published ports. If the port isn't working, be sure
	// your server accepts connections from all interfaces (0.0.0.0 or '*'), not just localhost.
	// 4646: nomad; 8500: consul; 8200: vault;
	// "appPort": [4646, 8500, 8200],

	// Uncomment the next line to run commands after the container is created.
	// "postCreateCommand": "uname -a",

	// Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-in-docker for details.
	"mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind", "type=tmpfs,destination=/tmpfs"],

	// Add these to runArgs if you will use a ptrace-based debugger like C++, Go, and Rust
	// [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	"runArgs": [ "--privileged"],

	// Uncomment the next line to have VS Code connect as an existing non-root user in the container. 
	// On Linux, by default, the container user's UID/GID will be updated to match your local user. See
	// https://aka.ms/vscode-remote/containers/non-root for details on adding a non-root user if none exist.
	// "remoteUser": "vscode",

	// Add the IDs of extensions you want installed when the container is created in the array below.
	"extensions": ["wholroyd.hcl"]
}