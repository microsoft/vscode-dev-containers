{
	"publisher": "Microsoft",
	"repository": "microsoft/vscode-dev-containers",

	"features": [],
	"definitions": [
		{
			"id": "alpine",
			"displayName": "Alpine",
			"description": "Simple Alpine container with Git installed.",
			"categories": ["Core", "Other"],
			"platforms": ["Any"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": ["3.14", "3.13", "3.12", "3.11"],
					"default": "3.13"
				},
				"INSTALL_ZSH": {
					"type": "boolean",
					"default": false,
					"description": "Install zsh"
				}
			}
		},

		{
			"id": "azure-ansible",
			"displayName": "Azure Ansible (Community)",
			"description": "Get going quickly with Ansible in Azure. Includes Ansible, the Azure CLI, the Docker CLI (for testing locally), Node.js for Cloud Shell, and related extensions and dependencies.",
			"categories": ["Community", "Azure", "Other"],
			"platforms": ["Azure", "Ansible"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-bicep",
			"displayName": "Azure Bicep (Community)",
			"description": "Debian container with the Azure Bicep, Azure CLI, related extensions, and dependencies.",
			"categories": ["Community", "Services", "Azure"],
			"platforms": ["Azure"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-cli",
			"displayName": "Azure CLI",
			"description": "Debian container with the Azure CLI, related extensions, and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-functions-dotnet-6-inprocess",
			"displayName": "Azure Functions & C- .NET 6 (In-Process)",
			"description": "Develop Azure Functions in C# (in-process). Includes NET 6, the Azure Functions SDK, and related extensions and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure Functions", ".NET Core", "C#"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-functions-dotnet-6-isolated",
			"displayName": "Azure Functions & C- .NET 6 (Isolated)",
			"description": "Develop Azure Functions in C# (isolated). Includes NET 6, the Azure Functions SDK, and related extensions and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure Functions", ".NET Core", "C#"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-functions-dotnetcore-3.1",
			"displayName": "Azure Functions & C- .NET Core 3.1",
			"description": "Develop Azure Functions in C#. Includes NET Core 3.1, the Azure Functions SDK, and related extensions and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure Functions", ".NET Core", "C#"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-functions-java-11",
			"displayName": "Azure Functions & Java 11",
			"description": "Develop Azure Functions in Java. Includes JDK 11, Maven, XML tools, the Azure Functions SDK, and related extensions and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure Functions", "Java"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-functions-java-8",
			"displayName": "Azure Functions & Java 8",
			"description": "Develop Azure Functions in Java. Includes JDK 8, Maven, XML tools, the Azure Functions SDK, and related extensions and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure Functions", "Java"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-functions-node",
			"displayName": "Azure Functions & Node.js",
			"description": "Develop Azure Functions in Node.js. Includes Node.js, eslint, the Azure Functions SDK, and related extensions and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure Functions", "Node.js", "JavaScript"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-functions-pwsh",
			"displayName": "Azure Functions & PowerShell",
			"description": "Develop Azure Functions in PowerShell. Includes .NET Core , PowerShell, the Azure Functions SDK, and related extensions and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure Functions", ".NET Core", "PowerShell"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-functions-python-3",
			"displayName": "Azure Functions & Python 3",
			"description": "Develop Azure Functions in Python. Includes Python 3, the Azure Functions SDK, Docker CLI (required to publish to Azure with native dependencies) and related extensions and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure Functions", "Python"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-machine-learning-python-3",
			"displayName": "Azure Machine Learning & Python 3 - Anaconda",
			"description": "Use Azure Machine Learning with Python 3 - Anaconda. Includes Anaconda, the Docker CLI (for local testing), and related extensions and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure Machine Learning", "Python", "Anaconda"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-static-web-apps",
			"displayName": "Azure Static Web Apps",
			"description": "Develop Azure Static Web Apps & Azure Functions in any supported language. Includes Node.js, eslint, Python, .NET Core, the Azure Functions SDK, and related extensions and dependencies.",
			"categories": ["Services", "Azure"],
			"platforms": ["Azure Functions", "Python", "C#", "Node.js", "JavaScript"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "azure-terraform",
			"displayName": "Azure Terraform (Community)",
			"description": "_build, change, and version Azure infrastructure with terraform_",
			"categories": ["Community", "Azure", "Other"],
			"platforms": ["Azure", "Terraform"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "bash",
			"displayName": "Bash (Community)",
			"description": "Develop scripts with Bash, includes [Bash IDE](https://marketplace.visualstudio.com/items?itemName=mads-hartmann.bash-ide-vscode), and [Bash Debug](https://github.com/rogalmic/vscode-bash-debug).",
			"categories": ["Community", "Languages"],
			"platforms": ["Bash"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "bazel",
			"displayName": "Bazel (Community)",
			"description": "Develop and compile efficiently on any language with the Bazel compilation tool.",
			"categories": ["Community", "Other"],
			"platforms": ["Any"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "chef-workstation",
			"displayName": "Chef Workstation Docker Container",
			"description": "_Everything you need to get started using Chef products._",
			"categories": ["Community"],
			"platforms": [
				"Chef Infra Client",
				"Chef InSpec",
				"Chef Command Line Tool",
				"Test Kitchen",
				"and Various Test Kitchen and Knife plugins for clouds"
			],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "codespaces-linux",
			"displayName": "GitHub Codespaces (Default Linux Universal)",
			"description": "Use or extend the new Ubuntu-based default, large, multi-language universal container for GitHub Codespaces.",
			"categories": ["Services", "GitHub"],
			"platforms": [
				"Python",
				"Node.js",
				"JavaScript",
				"TypeScript",
				"C++",
				"Java",
				"C#",
				"F#",
				".NET Core",
				"PHP",
				"PowerShell",
				"Go",
				"Ruby",
				"Rust",
				"Conda"
			],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "cpp",
			"displayName": "C++",
			"description": "Develop C++ applications on Linux. Includes Debian C++ build tools.",
			"categories": ["Core", "Languages"],
			"platforms": ["C++"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": [
						"debian-11",
						"debian-10",
						"ubuntu-21.04",
						"ubuntu-20.04",
						"ubuntu-18.04"
					],
					"default": "debian-10"
				}
			}
		},

		{
			"id": "cpp-mariadb",
			"displayName": "C++ & MariaDB",
			"description": "Develop C++ applications on Linux. Includes Debian C++ build tools.",
			"categories": ["Core", "Languages"],
			"platforms": ["C++"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "dapr-dotnet",
			"displayName": "Dapr with C(Community)",
			"description": "Develop Dapr applications using C# and .NET. Includes all needed SDKs, extensions, and dependencies.",
			"categories": ["Community", "Frameworks"],
			"platforms": [".NET Core", "C#", "Dapr"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "dapr-javascript-node",
			"displayName": "Dapr with Node.js & JavaScript (Community)",
			"description": "Develop Dapr applications using Node.js and JavaScript. Includes Dapr, Node.js, eslint, yarn, and the TypeScript compiler.",
			"categories": ["Community", "Frameworks"],
			"platforms": ["Node.js", "TypeScript", "Dapr"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "dart",
			"displayName": "Dart (Community)",
			"description": "Develop Dart based applications. Includes the Dart SDK, needed extensions, and dependencies.",
			"categories": ["Community", "Languages"],
			"platforms": ["Dart"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "debian",
			"displayName": "Debian",
			"description": "Simple Debian container with Git installed.",
			"categories": ["Core", "Other"],
			"platforms": ["Any"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": ["bullseye", "buster"],
					"default": "bullseye"
				}
			}
		},

		{
			"id": "deno",
			"displayName": "Deno (Community)",
			"description": "_Develop Deno applications. Includes the latest Deno runtime and extension._",
			"categories": ["Community", "Languages"],
			"platforms": ["Deno", "TypeScript", "JavaScript"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "docker-existing-docker-compose",
			"displayName": "Existing Docker Compose (Extend)",
			"description": "Sample illustrating how to extend an existing Docker Compose file for use in a dev container.",
			"categories": ["Core", "Other"],
			"platforms": ["Any"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "docker-existing-dockerfile",
			"displayName": "Existing Dockerfile",
			"description": "Sample illustrating reuse of an existing Dockefile.",
			"categories": ["Core", "Other"],
			"platforms": ["Any"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "docker-from-docker",
			"displayName": "Docker from Docker",
			"description": "Access your host's Docker install from inside a dev container. Installs Docker extension in the container along with needed CLIs.",
			"categories": ["Other"],
			"platforms": ["Any"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "docker-from-docker-compose",
			"displayName": "Docker from Docker Compose",
			"description": "Access your host's Docker install from inside a container when using Docker Compose. Installs Docker extension in the container along with needed CLIs.",
			"categories": ["Other"],
			"platforms": ["Any"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "docker-in-docker",
			"displayName": "Docker in Docker",
			"description": "Create child containers _inside_ a container, independent from the host's docker instance. Installs Docker extension in the container along with needed CLIs.",
			"categories": ["Other"],
			"platforms": ["Any"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "dotnet",
			"displayName": "C(.NET)",
			"description": "Develop C# and .NET based applications. Includes all needed SDKs, extensions, and dependencies.",
			"categories": ["Core", "Languages"],
			"platforms": [".NET", ".NET Core", "C#"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": [
						"6.0-bullseye",
						"5.0-bullseye",
						"3.1-bullseye",
						"6.0-focal",
						"5.0-focal",
						"3.1-focal"
					],
					"default": "6.0-bullseye-slim"
				}
			}
		},

		{
			"id": "dotnet-fsharp",
			"displayName": "F(.NET)",
			"description": "Develop F# and .NET based applications. Includes all needed SDKs, extensions, and dependencies.",
			"categories": ["Languages"],
			"platforms": [".NET", ".NET Core", "F#"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "dotnet-mssql",
			"displayName": "C(.NET) and MS SQL",
			"description": "Develop C# and .NET Core based applications. Includes all needed SDKs, extensions, dependencies and an MS SQL container for parallel database development. Adds an additional MS SQL container to the C# (.NET Core) container definition and deploys any .dacpac files from the mssql .devcontainer folder.",
			"categories": ["Core", "Languages"],
			"platforms": [".NET", ".NET Core", "C#", "Microsoft SQL"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "dotnet-postgres",
			"displayName": "C(.NET) and PostgreSQL (Community)",
			"description": "Develop C# and .NET Core based applications. Includes all needed SDKs, extensions, dependencies and a PostgreSQL container for parallel database development. Adds an additional PostgreSQL container to the C# (.NET Core) container definition.",
			"categories": ["Core", "Languages"],
			"platforms": [".NET", ".NET Core", "C#", "PostgreSQL"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "elixir",
			"displayName": "Elixir (Community)",
			"description": "_Develop Elixir based applications. Includes everything you need to get up and running._",
			"categories": ["Community", "Languages"],
			"platforms": ["Elixir"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "elixir-phoenix-postgres",
			"displayName": "Elixir, Phoenix, Node.js & PostgresSQL (Community)",
			"description": "_Develop Elixir/Phoenix based applications. Includes everything you need to get up and running._",
			"categories": ["Community", "Languages", "Frameworks"],
			"platforms": ["Elixir", "Postgres DB"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "elm",
			"displayName": "Elm (Community)",
			"description": "Develop Elm based applications. Includes the Elm language server extension & binary",
			"categories": ["Community", "Languages"],
			"platforms": ["Elm"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "go",
			"displayName": "Go",
			"description": "Develop Go based applications. Includes appropriate runtime args, Go, common tools, extensions, and dependencies.",
			"categories": ["Core", "Languages"],
			"platforms": ["Go"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": [
						"1",
						"1.16",
						"1.17",
						"1-bullseye",
						"1.16-bullseye",
						"1.17-bullseye",
						"1-buster",
						"1.16-buster",
						"1.17-buster"
					],
					"default": "1-bullseye"
				}
			}
		},

		{
			"id": "go-postgres",
			"displayName": "Go",
			"description": "Use and develop Go + Postgres applications. Includes appropriate runtime args, Go, common tools, extensions, and dependencies.",
			"categories": ["Core", "Languages"],
			"platforms": ["Go"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "haskell",
			"displayName": "Haskell (Community)",
			"description": "_This definition will hopefully get you going quickly with Haskell running as a remote container in vscode_",
			"categories": ["Community", "Haskell"],
			"platforms": ["Haskell"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "hugo",
			"displayName": "Hugo",
			"description": "Develop static sites with Hugo, includes everything you need to get up and running.",
			"categories": ["Community", "Frameworks"],
			"platforms": ["Hugo"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "java",
			"displayName": "Java",
			"description": "Develop Java applications. Includes the JDK and Java extensions.",
			"categories": ["Core", "Languages"],
			"platforms": ["Java"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": [
						"11",
						"17",
						"11-bullseye",
						"17-bullseye",
						"11-buster",
						"17-buster"
					],
					"default": "11-bullseye"
				}
			}
		},

		{
			"id": "java-8",
			"displayName": "Java 8",
			"description": "Develop Java applications. Includes the JDK 8 (and 11) and Java extensions.",
			"categories": ["Core", "Languages"],
			"platforms": ["Java"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "java-postgres",
			"displayName": "Java & PostgreSQL",
			"description": "Develop applications with Java and PostgreSQL. Includes a Java application container and PostgreSQL server.",
			"categories": ["Core", "Languages"],
			"platforms": ["Java"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "javascript-node",
			"displayName": "Node.js & JavaScript",
			"description": "Develop Node.js based applications. Includes Node.js, eslint, nvm, and yarn.",
			"categories": ["Core", "Languages"],
			"platforms": ["Node.js", "JavaScript"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": [
						"16-bullseye",
						"14-bullseye",
						"12-bullseye",
						"16-buster",
						"14-buster",
						"12-buster"
					],
					"default": "16-bullseye"
				}
			}
		},

		{
			"id": "javascript-node-azurite",
			"displayName": "Node.js & Azurite (Community)",
			"description": "3. Start VS Code, press <kbd>F1</kbd>, and select Remote-Containers: Open Folder in Container...",
			"categories": ["Community", "Azure"],
			"platforms": ["Azurite", "Node.js"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "javascript-node-mongo",
			"displayName": "Node.js & Mongo DB",
			"description": "Develop applications in Node.js and Mongo DB. Includes Node.js, eslint, and yarn in a container linked to a Mongo DB.",
			"categories": ["Core", "Languages"],
			"platforms": ["Node.js", "JavaScript", "Mongo DB"],
			"type": "dockerCompose",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": [
						"16-bullseye",
						"14-bullseye",
						"12-bullseye",
						"16-buster",
						"14-buster",
						"12-buster",
						"16",
						"14",
						"12"
					],
					"default": "14"
				}
			}
		},

		{
			"id": "javascript-node-postgres",
			"displayName": "Node.js & PostgreSQL",
			"description": "Develop applications in Node.js and PostgreSQL. Includes Node.js, eslint, and yarn in a container linked to a Postgres DB container",
			"categories": ["Core", "Languages"],
			"platforms": ["Node.js", "JavaScript", "PostgreSQL DB"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "jekyll",
			"displayName": "Jekyll",
			"description": "Develop static sites with Jekyll, includes everything you need to get up and running.",
			"categories": ["Community", "Languages", "Frameworks"],
			"platforms": ["Ruby", "Jekyll"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "julia",
			"displayName": "Julia (Community)",
			"description": "Develop Julia applications.",
			"categories": ["Community", "Languages"],
			"platforms": ["Julia"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "jupyter-datascience-notebooks",
			"displayName": "Jupyter Data Science Notebooks (Community)",
			"description": "Use Jupyter Data Science Notebooks with Python, R, Julia, and more.",
			"categories": ["Data Science"],
			"platforms": [
				"Python",
				"R",
				"Julia",
				"numpy",
				"pandas",
				"tidyverse",
				"much more"
			],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "kubernetes-helm",
			"displayName": "Kubernetes - Local Configuration",
			"description": "Access a local (or remote) Kubernetes cluster from inside a dev container using your local config. Includes kubectl, Helm, and the Docker CLI.",
			"categories": ["Other"],
			"platforms": ["Any"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "kubernetes-helm-minikube",
			"displayName": "Kubernetes - Minikube-in-Docker",
			"description": "Access an embedded minikube instance or remote a Kubernetes cluster from inside a dev container. Includes kubectl, Helm, minikube, and the Docker.",
			"categories": ["Other"],
			"platforms": ["Any"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "markdown",
			"displayName": "Markdown",
			"description": "A simple container for editing markdown.",
			"categories": ["Languages"],
			"platforms": ["Markdown"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "mit-scheme",
			"displayName": "MIT-Scheme (Community)",
			"description": "Simple mit-scheme container with Git installed.",
			"categories": ["Community"],
			"platforms": ["MIT-Scheme"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "perl",
			"displayName": "Perl (Community)",
			"description": "Develop Perl applications on Linux",
			"categories": ["Community", "Languages"],
			"platforms": ["Perl"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "php",
			"displayName": "PHP",
			"description": "Develop PHP based applications. Includes needed tools, extensions, and dependencies.",
			"categories": ["Languages"],
			"platforms": ["PHP"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": [
						"8-apache-bullseye",
						"8.1-apache-bullseye",
						"8.0-apache-bullseye",
						"7-apache-bullseye",
						"7.4-apache-bullseye",
						"8-apache-buster",
						"8.1-apache-buster",
						"8.0-apache-buster",
						"7-apache-buster",
						"7.4-apache-buster"
					],
					"default": "7-apache-bullseye"
				}
			}
		},

		{
			"id": "php-mariadb",
			"displayName": "PHP & MariaDB (Community)",
			"description": "3. Start VS Code, press <kbd>F1</kbd>, and select Remote-Containers: Open Folder in Container...",
			"categories": ["Community", "Languages"],
			"platforms": ["PHP", "MariaDB (MySQL Compatible)"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "powershell",
			"displayName": "PowerShell",
			"description": "Develop PowerShell scripts without installing anything locally.",
			"categories": ["Languages"],
			"platforms": ["PowerShell"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "puppet",
			"displayName": "Puppet Development Kit Docker Container (Community)",
			"description": "Develop Puppet based applications. Includes everything you need to get up and running.",
			"categories": ["Community", "Other"],
			"platforms": ["Puppet"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "python-3",
			"displayName": "Python 3",
			"description": "Develop Python 3 applications.",
			"categories": ["Core", "Languages"],
			"platforms": ["Python"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": [
						"3",
						"3.10",
						"3.9",
						"3.8",
						"3.7",
						"3.6",
						"3-bullseye",
						"3.10-bullseye",
						"3.9-bullseye",
						"3.8-bullseye",
						"3.7-bullseye",
						"3.6-bullseye",
						"3-buster",
						"3.10-buster",
						"3.9-buster",
						"3.8-buster",
						"3.7-buster",
						"3.6-buster"
					],
					"default": "3-bullseye"
				}
			}
		},

		{
			"id": "python-3-anaconda",
			"displayName": "Anaconda (Python 3)",
			"description": "Develop Anaconda applications in Python3. Installs dependencies from your environment.yml file and the Python extension.",
			"categories": ["Core", "Languages"],
			"platforms": ["Python", "Anaconda"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "python-3-anaconda-postgres",
			"displayName": "Anaconda (Python 3) & PostgreSQL",
			"description": "Develop Anaconda applications in Python3. Installs dependencies from your environment.yml file and the Python extension.",
			"categories": ["Core", "Languages"],
			"platforms": ["Python", "Anaconda"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "python-3-device-simulator-express",
			"displayName": "Python 3 & Device Simulator Express (Community)",
			"description": "Develop for ci}uit boards, with or without a physical device using Python 3 and [Device Simulator Express](https://www.microsoft.com/en-us/garage/profiles/device-simulator-express/)",
			"categories": ["Community", "Other"],
			"platforms": ["Python"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "python-3-miniconda",
			"displayName": "Miniconda (Python 3)",
			"description": "Develop Miniconda applications in Python 3. Installs dependencies from your environment.yml file and the Python extension.",
			"categories": ["Core", "Languages"],
			"platforms": ["Python", "Anaconda", "Miniconda"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "python-3-miniconda-postgres",
			"displayName": "Miniconda (Python 3)",
			"description": "Develop Miniconda applications in Python 3. Installs dependencies from your environment.yml file and the Python extension.",
			"categories": ["Core", "Languages"],
			"platforms": ["Python", "Anaconda", "Miniconda"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "python-3-postgres",
			"displayName": "Python 3 & PostgreSQL",
			"description": "Develop applications with Python 3 and PostgreSQL. Includes a Python application container and PostgreSQL server.",
			"categories": ["Core", "Languages"],
			"platforms": ["Python"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "python-3-pypy",
			"displayName": "PyPy (Community)",
			"description": "Develop python applications using the PyPy interpreter",
			"categories": ["Community", "Languages"],
			"platforms": ["Python", "PyPy"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "r",
			"displayName": "R (Community)",
			"description": "Perform statistical computing using the R language on Linux. Includes R and needed extensions.",
			"categories": ["Community", "Languages"],
			"platforms": ["R"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "reasonml",
			"displayName": "ReasonML (Community)",
			"description": "Develop ReasonML applications.",
			"categories": ["Community", "Languages"],
			"platforms": ["ReasonML"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "ruby",
			"displayName": "Ruby",
			"description": "Develop Ruby based applications. includes everything you need to get up and running.",
			"categories": ["Core", "Languages"],
			"platforms": ["Ruby"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"enum": ["3", "2.7", "3-bullseye", "2.7-bullseye"],
					"default": "3",
					"description": "Select variant of the vscode/devcontainers/ruby image to be set as the base image of this Dockerfile."
				},
				"NODE_VERSION": {
					"type": "string",
					"proposals": ["lts", "16", "14", "10", "none"],
					"default": "16",
					"description": "Specify version of node, or 'none' to skip node installation."
				}
			}
		},

		{
			"id": "ruby-rails",
			"displayName": "Ruby on Rails (Community)",
			"description": "_Develop Ruby on Rails applications, includes everything you need to get up and running._",
			"categories": ["Community", "Frameworks"],
			"platforms": ["Ruby"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "ruby-rails-postgres",
			"displayName": "Ruby on Rails & Postgres",
			"description": "Develop Ruby on Rails applications with Postgres. Includes a Rails application container and PostgreSQL server.",
			"categories": ["Core", "Frameworks"],
			"platforms": ["Ruby"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "ruby-sinatra",
			"displayName": "Ruby & Sinatra (Community)",
			"description": "Develop Ruby and Sinatra applications. Includes everything you need to get up and running.",
			"categories": ["Community", "Frameworks"],
			"platforms": ["Ruby"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "rust",
			"displayName": "Rust",
			"description": "Develop Rust based applications. Includes appropriate runtime args and everything you need to get up and running.",
			"categories": ["Core", "Languages"],
			"platforms": ["Rust"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": ["buster", "bullseye"],
					"default": "bullseye"
				}
			}
		},

		{
			"id": "rust-postgres",
			"displayName": "Rust & PostgreSQL",
			"description": "Develop applications with Rust and PostgreSQL. Includes a Rust application container and PostgreSQL server.",
			"categories": ["Core", "Languages"],
			"platforms": ["Rust"],
			"type": "dockerCompose",
			"options": {}
		},

		{
			"id": "sfdx-project",
			"displayName": "SFDX Project (Community)",
			"description": "_Salesfo}e Extension for VS Code supports remote development and allows you to use a docker container as a full-featured development environment._",
			"categories": ["Community", "Services"],
			"platforms": [
				"Salesfo}e CLI",
				"Lightning Web Components",
				"Apex",
				"Aura",
				"Java",
				"Node.js",
				"JavaScript",
				"HTML",
				"CSS",
				"Git"
			],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "swift",
			"displayName": "Swift (Community)",
			"description": "Develop Swift based applications. Includes everything you need to get up and running.",
			"categories": ["Community", "Languages"],
			"platforms": ["Swift"],
			"type": "singleContainer",
			"options": {}
		},

		{
			"id": "typescript-node",
			"displayName": "Node.js & TypeScript",
			"description": "Develop Node.js based applications in TypeScript. Includes Node.js, eslint, nvm, yarn, and the TypeScript compiler.",
			"categories": ["Core", "Languages"],
			"platforms": ["Node.js", "TypeScript"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": [
						"16-bullseye",
						"14-bullseye",
						"12-bullseye",
						"16-buster",
						"14-buster",
						"12-buster"
					],
					"default": "16-bullseye"
				}
			}
		},

		{
			"id": "ubuntu",
			"displayName": "Ubuntu",
			"description": "A simple Ubuntu container with Git and other common utilities installed.",
			"categories": ["Core", "Other"],
			"platforms": ["Any"],
			"type": "singleContainer",
			"options": {
				"VARIANT": {
					"type": "string",
					"proposals": ["hirsute", "bionic", "focal"],
					"default": "focal"
				}
			}
		},

		{
			"id": "vue",
			"displayName": "Vue",
			"description": "Develop applications with Vue.js, includes everything you need to get up and running.",
			"categories": ["Community", "Frameworks"],
			"platforms": ["Javascript"],
			"type": "singleContainer",
			"options": {}
		}
	]
}
